/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class App {
    private static final String HELPTEXT_STRING = "Allowed operators: * / + -\n"
                                + "Constants: pi, e\n"
            + "Functions: sqrt()";

    public String getGreeting() {
        return "Listening for incoming connection...";
    }

    public static void main(String[] args) {
        //System.out.println(new App().getGreeting());
        new App().listener(1610);
        //new App().webServer(8080);
    }

    static String parseData(String msg) {
        System.out.println("Data from client: " + msg);
        String ans;
        
        try {
            ans = String.format("%.5f", MathExpressionParser.parse(msg));
            System.out.println("Result: " + ans);
        } catch (NumberFormatException ex) {
            ans = "Invalid expression or unsupported operator";
        }
        
        return ans;
    }

    public void listener(int port) {
        try (ServerSocket serverSocket = new ServerSocket(port);
             Socket clientSocket = serverSocket.accept();
             PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
             InputStreamReader isr = new InputStreamReader(clientSocket.getInputStream());
             BufferedReader in = new BufferedReader(isr)) {
            System.out.println("Client connected");
            String inputLine;
            out.println("rdy");
            inputLine = in.readLine();
            while (!inputLine.equals("bye")) {
                if (inputLine.equals("help")) {
                    out.println(HELPTEXT_STRING);
                } else {
                    out.println(parseData(inputLine));
                }
                inputLine = in.readLine();

            }
            out.println("bye");
        } catch (IOException ex) {
            System.out.println("IO Exception: " + ex.getMessage());
        }
    }

    public void webServer(int port) {
        try (ServerSocket serverSocket = new ServerSocket(port);
                Socket clienSocket = serverSocket.accept();
                PrintWriter out = new PrintWriter(clienSocket.getOutputStream(), true);) {
            out.println("<h1>Bop!</h1>");
            out.println();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }
}

